[gd_scene load_steps=2 format=3 uid="uid://cdgrqwyfai0iq"]

[sub_resource type="GDScript" id="GDScript_jm3ts"]
script/source = "extends Node3D

@export var obstacle_scene: PackedScene
@export var ramp_scene: PackedScene
@export var player: CharacterBody3D
@export var shield: PackedScene
@export var spawn_distance = 20.0
@export var spawn_interval = 2.0
var timer: Timer


func _ready():
	timer = Timer.new()
	add_child(timer)
	timer.timeout.connect(_spawn_obstacle)
	timer.start(spawn_interval)
	await get_tree().create_timer(0.1).timeout
	_spawn_obstacle()


func _process(delta):
	if player:
		global_position = Vector3(global_position.x, player.position.y + 3, player.position.z + spawn_distance)


func _spawn_obstacle():
	if !obstacle_scene or !player:
		return
	var obstacle = obstacle_scene.instantiate()
	get_parent().add_child(obstacle)
	obstacle.global_position = Vector3(global_position.x + randf_range(-18.0, 18.0), global_position.y, global_position.z)


	if obstacle.position.z < player.position.z - 125:
		_spawn_obstacle()
		obstacle.queue_free()
"

[node name="ObstacleSpawner" type="Node3D"]
script = SubResource("GDScript_jm3ts")

[node name="Timer" type="Timer" parent="."]
autostart = true

[connection signal="timeout" from="Timer" to="." method="_on_timer_timeout"]
